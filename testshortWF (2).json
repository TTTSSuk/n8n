{
  "name": "testshortWF",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        832,
        2128
      ],
      "id": "e7269d35-4c9b-4212-af46-6700c2dc5fb5",
      "name": "Wait5",
      "webhookId": "36329ec2-d374-46f4-a9ab-c7a841e1ebfe"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -400,
        2048
      ],
      "id": "7185caa4-3e7c-4b41-9e75-de3065a568b5",
      "name": "Wait4",
      "webhookId": "5a4fb6af-103c-45d9-8f2d-177b98f219cc"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20000/jobs/{{ $('generate_async1').item.json.job_id }}/detailed_progress ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3824,
        2112
      ],
      "id": "433780f3-a948-4e3e-bad4-0bc27d003e41",
      "name": "detail_progress"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://192.168.70.219:20000/framepack/generate_async",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "file"
            },
            {
              "name": "prompt",
              "value": "={{ $('AI Agent4').item.json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3632,
        2112
      ],
      "id": "57bc9a5b-f5a0-4221-a96b-6c4c38fd2565",
      "name": "generate_async1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4496,
        2288
      ],
      "id": "e7168b25-051c-439c-b54e-9f63a77decc9",
      "name": "loop_processing1",
      "webhookId": "c7b07b8f-df58-493b-9ddd-fd87ba497ad4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "673a61d2-307f-49aa-b5db-b104bde202b4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "failed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4272,
        2224
      ],
      "id": "ce96c6e3-f6ef-4523-aa03-5a5327475d6d",
      "name": "chech_failed1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b2d0ee2f-0d27-4600-8a3c-71576a6831d9",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4000,
        2112
      ],
      "id": "60d3352f-fc93-4cd7-8720-eb3ad9a665de",
      "name": "check_completed1"
    },
    {
      "parameters": {
        "url": "={{ $('Status1').item.json.result.video_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4496,
        2032
      ],
      "id": "b76b209e-5725-4d4e-aee8-c5a435620322",
      "name": "urlVDO1"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20000/status/{{ $('generate_async1').item.json.job_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4272,
        2032
      ],
      "id": "1716023f-50ea-4952-af3c-bbff5a31fdeb",
      "name": "Status1"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $json[\"stdout\"]; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst textFiles = [];\nconst imageFiles = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.txt')) {\n    textFiles.push(file);\n  } else if (file.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\n    imageFiles.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      textFiles,\n      imageFiles,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        2128
      ],
      "id": "4077d859-2878-4bc6-b253-bfe34c2e04da",
      "name": "Code5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        48,
        2128
      ],
      "id": "f3f0867c-1dbe-418d-818a-a458f3310f3c",
      "name": "Wait3",
      "webhookId": "ee37bd18-1622-4b9c-bb28-274689d48ff6"
    },
    {
      "parameters": {
        "jsCode": "const folders = $json[\"stdout\"].trim().split('\\n');\nreturn folders.map(path => ({ json: { folderPath: path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -624,
        2048
      ],
      "id": "4c957294-4705-45f2-9427-56b35d6d1a5d",
      "name": "Code4"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.jpg\" -o -iname \"*.txt\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        496,
        2128
      ],
      "id": "6b4a630f-b051-45bb-9a12-1d1878e0b457",
      "name": "Execute Command24"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"executionID\" : \"{{ $execution.id }}\",\n  \"extractPath\" : \"{{ $json.body.extractPath }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        -1104,
        1856
      ],
      "id": "80ee2e66-4623-46c0-bbf8-cce2cef2cf9c",
      "name": "Respond to Webhook",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "start-wf",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1296,
        2048
      ],
      "id": "4cef9f5f-5b93-414b-a0f0-13f325732931",
      "name": "Webhook3",
      "webhookId": "422cb760-e6cb-4e2d-a5d5-9fe952f8ed4a",
      "executeOnce": false,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        272,
        2128
      ],
      "id": "bcecc1b6-c44a-4826-a02b-ee4af1d40aec",
      "name": "Code1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -176,
        2048
      ],
      "id": "9f446883-255d-4159-8e4f-b55e17662548",
      "name": "Loop Over Items1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook3').item.json.body.extractPath }}/*.mp4 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        704,
        4272
      ],
      "id": "e1187558-3c2e-4aa1-a59d-c7a5b5cb9b94",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook3').item.json.body.extractPath }}/final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        928,
        4272
      ],
      "id": "11a6e62e-aefe-4990-9df8-2933e0101c2a",
      "name": "Execute Command13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"video\": \"{{ $('reformat3').item.json.filePath.replace('/extracted/','') }}\",\n  \"folderName\": \"{{ $('Code1').item.json.nowFolder.split('/').pop() }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6256,
        2416
      ],
      "id": "4bc66672-66aa-4f33-a8f5-ca0736c7018b",
      "name": "callback"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"resultVideo\": \"{{ $json.stderr.match(/to '\\/extracted\\/([^']+)'/)[1] }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1952,
        3472
      ],
      "id": "ccde08da-fd0c-475d-be63-d41e43798b4f",
      "name": "HTTP Request5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        176,
        4640
      ],
      "id": "38e3f22d-6352-4348-bb92-d3a199f45973",
      "name": "Wait6",
      "webhookId": "36329ec2-d374-46f4-a9ab-c7a841e1ebfe"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1168,
        4640
      ],
      "id": "e291649a-ce03-4beb-8f01-69d138581c76",
      "name": "Wait7",
      "webhookId": "5a4fb6af-103c-45d9-8f2d-177b98f219cc"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code9').item.json.textFiles[0] }}\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        400,
        4704
      ],
      "id": "cf5d28c4-dd1c-4d98-886c-edffb8e7e1c6",
      "name": "Execute Command10"
    },
    {
      "parameters": {
        "content": "## อ่านรูปภาพเป็น binary",
        "height": 220,
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        4576
      ],
      "typeVersion": 1,
      "id": "6f9ce7c8-560d-4874-a914-47447860f0a3",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $json[\"stdout\"]; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst textFiles = [];\nconst imageFiles = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.txt')) {\n    textFiles.push(file);\n  } else if (file.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\n    imageFiles.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      textFiles,\n      imageFiles,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        4640
      ],
      "id": "9ac01ef7-d897-43c2-8fce-10691d9dcf0b",
      "name": "Code9"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -720,
        4640
      ],
      "id": "b9ec548e-0b2a-455e-80c5-30560441a055",
      "name": "Wait8",
      "webhookId": "ee37bd18-1622-4b9c-bb28-274689d48ff6"
    },
    {
      "parameters": {
        "jsCode": "// ดึง item array ของ node ก่อนหน้า\nconst prevItems = $node[\"Execute Command11\"].json;\nconst stdout = Array.isArray(prevItems) ? prevItems[0].stdout : prevItems.stdout;\n\n// แยกบรรทัดและกรองเฉพาะที่ไม่ว่าง\nconst folders = stdout.trim().split('\\n').filter(f => f.trim());\n\n// map เป็นรูปแบบ item ของ n8n พร้อม index และ total\nreturn folders.map((path, index) => ({ \n  json: { \n    folderPath: path.trim(),\n    folderIndex: index + 1,\n    totalFolders: folders.length,\n    isFirstItem: index === 0  // เพื่อใช้ reset counter\n  } \n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1392,
        4640
      ],
      "id": "d3f37f6b-67d2-43b9-a7cf-b9fd0bb395fe",
      "name": "Code10"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.jpg\" -o -iname \"*.txt\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -272,
        4640
      ],
      "id": "c5548489-38ce-47cf-9641-ee91b4465652",
      "name": "Execute Command25"
    },
    {
      "parameters": {
        "content": "## หาว่ามี path ที่รับเข้ามาจริงมั้ย\n- และดูว่ามี folder อะไรบ้าง",
        "height": 240,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1632,
        4560
      ],
      "typeVersion": 1,
      "id": "288dd31f-e07c-4d8f-be3d-72ecf5de70d8",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -496,
        4640
      ],
      "id": "7c59f9c2-aa84-4822-9c30-9f021cdc56a6",
      "name": "Code11"
    },
    {
      "parameters": {
        "command": "=find /extracted/1753937044739 -type d -mindepth 2 -maxdepth 2\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1616,
        4640
      ],
      "id": "5ce11db3-364e-4b6d-a502-9417bb544724",
      "name": "Execute Command11"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $json.stdout }} -c copy /extracted/1122334455/final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -496,
        4448
      ],
      "id": "b0d89577-062f-48f9-9dde-1972df9fc285",
      "name": "Execute Command12"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1440,
        3872
      ],
      "id": "10857f37-9a02-45a4-8dff-0f089c6b26ed",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "jsCode": "// เก็บผลลัพธ์ใน global\nif (!global.buffer) {\n    global.buffer = [];\n    global.expectedCount = null;\n}\n\n// เก็บ item นี้\nglobal.buffer.push($json);\n\n// เซ็ต expected count ครั้งแรก\nif (global.expectedCount === null) {\n    global.expectedCount = $json.totalFolders;\n}\n\nconsole.log(`Buffered: ${global.buffer.length}/${global.expectedCount}`);\n\n// ถ้าครบแล้ว ส่งออกทั้งหมด\nif (global.buffer.length >= global.expectedCount) {\n    const allItems = [...global.buffer];\n    \n    // Reset buffer\n    global.buffer = [];\n    global.expectedCount = null;\n    \n    // ส่ง signal ให้ ffmpeg ทำงาน\n    return [{\n        json: {\n            message: \"All folders processed\",\n            totalFolders: allItems.length,\n            readyForFfmpeg: true\n        }\n    }];\n} else {\n    // ยังไม่ครบ ไม่ส่งอะไร (Execute Command12 จะไม่ทำงาน)\n    return [];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        4448
      ],
      "id": "00f20b96-3f70-42ad-9857-06c8eb399186",
      "name": "Code12"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -944,
        4640
      ],
      "id": "8201b100-28d6-4aa8-a750-d525abccd48e",
      "name": "Loop Over Items",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "command": "=ls {{ $json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1264,
        3648
      ],
      "id": "cd48b3b9-ef84-4623-9815-b00a8b919526",
      "name": "Execute Command9"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "start-wf",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -1488,
        3552
      ],
      "id": "d4aa0663-29d3-47e5-8ed6-e91f79ebffce",
      "name": "Webhook",
      "webhookId": "86d2d2a1-fa14-4293-817b-4c6606eb414b",
      "disabled": true
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1040,
        3648
      ],
      "id": "0cc01f38-7d8b-4105-bed5-0445f4bbf9ca",
      "name": "Wait",
      "webhookId": "31e7d651-d221-4029-9861-649b870bb483"
    },
    {
      "parameters": {
        "jsCode": "// เอา stderr จาก input\nconst stderrString = $input.first().json.stderr;\n\n// ใช้ regex หา path ของไฟล์ mp4\nconst match = stderrString.match(/Output #0, mp4, to '(.*?)':/);\n\nlet outputPath = '';\nif (match && match[1]) {\n    outputPath = match[1]; // จะได้ /extracted/11335577/urlvdotest.mp4\n}\n\nreturn [{ json: { outputPath } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -592,
        3648
      ],
      "id": "a2b75155-61c8-48bb-8baa-65f7e6a34b41",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"executionID\" : \"{{ $execution.id }}\",\n  \"extractPath\" : \"{{ $json.body.extractPath }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        -1264,
        3456
      ],
      "id": "f816c6aa-2e30-4428-aab8-48f733426820",
      "name": "Respond to Webhook1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "command": "=/usr/bin/ffmpeg -f concat -safe 0 -i {{ $('Webhook').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook').item.json.body.extractPath }}/newpegwebui222.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -816,
        3648
      ],
      "id": "5c145d50-561b-4a31-8751-3a5b6f2181f0",
      "name": "Execute Command1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/video-complete",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"videoPath\": \"{{ $json.outputPath }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -368,
        3648
      ],
      "id": "98087714-77d9-4cae-a412-e1c04758781d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.outputPath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1264,
        4288
      ],
      "id": "6841672f-31ab-4f9b-915d-732675780c4c",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "jsCode": "// เอา stderr จาก input\nconst stderrString = $input.first().json.stderr;\n\n// ใช้ regex หา path ของไฟล์ mp4\nconst match = stderrString.match(/Output #0, mp4, to '(.*?)':/);\n\nlet outputPath = '';\nif (match && match[1]) {\n    outputPath = match[1]; // จะได้ /extracted/11335577/urlvdotest.mp4\n}\n\nreturn [{ json: { outputPath } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1488,
        4288
      ],
      "id": "51ad65e3-49fd-4a8e-8372-55a8f896decf",
      "name": "Code2"
    },
    {
      "parameters": {
        "url": "={{ $('Status').item.json.result.video_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1168,
        5152
      ],
      "id": "85666bf8-b06a-4e8f-873f-d39c2c5a84ed",
      "name": "urlVDO"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20000/status/c9bab0c2-c1c8-44c2-82a1-9d0606688fe4",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1392,
        5152
      ],
      "id": "2cec966c-8d9f-4cb8-8e1d-145bfc036b8f",
      "name": "Status"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20000/jobs/c9bab0c2-c1c8-44c2-82a1-9d0606688fe4/detailed_progress ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1616,
        5152
      ],
      "id": "1a143123-96b2-453b-8194-191e4f68eb5f",
      "name": "detail_progress1"
    },
    {
      "parameters": {
        "content": "## callback path ",
        "height": 240,
        "width": 576
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1632,
        5072
      ],
      "typeVersion": 1,
      "id": "45f095ad-d507-445d-91e5-aece50855870",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fce844c1-493b-4a72-a9c7-332e50ab3fc4",
              "name": "executionId",
              "value": "testapicall",
              "type": "string"
            },
            {
              "id": "6876df64-d532-4c4d-8db4-f2b326261741",
              "name": "PathServer",
              "value": "/tmp/test_n8n.mp4",
              "type": "string"
            },
            {
              "id": "f8ea0381-5a65-40ef-9d93-634a459d6d78",
              "name": "PATHurl",
              "value": "http://127.0.0.1:7860/tmp/test_n8n.mp4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        4928
      ],
      "id": "fa0b2012-4404-43a8-8f3e-f2132813b012",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"type\": \"VideoGenerate\"\n  \"PathServer\": \"{{ $json.PathServer }}\",\n  \"PATHurl\": \"{{ $json.PATHurl }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        624,
        4928
      ],
      "id": "3116e72b-3f7a-45d6-b65a-c992a096659b",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1168,
        4928
      ],
      "id": "d4a8f93a-ae19-4ebd-9a3b-8efd3032923f",
      "name": "Wait9",
      "webhookId": "5a4fb6af-103c-45d9-8f2d-177b98f219cc"
    },
    {
      "parameters": {
        "jsCode": "const folders = $json[\"stdout\"].trim().split('\\n');\nreturn folders.map(path => ({ json: { folderPath: path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1392,
        4928
      ],
      "id": "ce9bd8c7-0054-4b91-b695-b85f5152df76",
      "name": "Code6"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -type d -mindepth 2 -maxdepth 2\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1616,
        4928
      ],
      "id": "e7bc2ce4-7164-41c9-923a-c919f809346c",
      "name": "Execute Command5"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -944,
        4928
      ],
      "id": "af95372a-be83-4ef8-a193-203dc95cc9e2",
      "name": "Loop Over Items2",
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        176,
        4928
      ],
      "id": "32689713-d31e-4327-aa50-864105a527ba",
      "name": "Wait10",
      "webhookId": "36329ec2-d374-46f4-a9ab-c7a841e1ebfe"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $json[\"stdout\"]; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst textFiles = [];\nconst imageFiles = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.txt')) {\n    textFiles.push(file);\n  } else if (file.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\n    imageFiles.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      textFiles,\n      imageFiles,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        4928
      ],
      "id": "d1eae990-cf08-4b0c-a53e-e2179465892d",
      "name": "Code7"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -720,
        4928
      ],
      "id": "8b7f597b-c736-4367-bafd-caad5950e946",
      "name": "Wait11",
      "webhookId": "ee37bd18-1622-4b9c-bb28-274689d48ff6"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.jpg\" -o -iname \"*.txt\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -272,
        4928
      ],
      "id": "bcf90a95-a0d7-40c6-8023-2c65c10b7573",
      "name": "Execute Command26"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -496,
        4928
      ],
      "id": "5fd9d87c-9915-467e-aba4-858374a7e6a2",
      "name": "Code3"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        848,
        4928
      ],
      "id": "3b55c6d8-bf9d-477b-9a01-4f06996e8241",
      "name": "Wait1",
      "webhookId": "27fb0064-3f63-404e-87ad-2d8b5216cb00"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"type\": \"VideoGenerate\",\n  \"PathServer\": \"{{ $json.PathServer.replace(/\\\\/g,'/') }}\",\n  \"PATHurl\": \"{{ $json.PATHurl.replace(/\\\\/g,'/') }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1504,
        4864
      ],
      "id": "38f4800f-23a5-4bf0-9c44-c164b14be098",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fce844c1-493b-4a72-a9c7-332e50ab3fc4",
              "name": "executionId",
              "value": "testapicall",
              "type": "string"
            },
            {
              "id": "6876df64-d532-4c4d-8db4-f2b326261741",
              "name": "PathServer",
              "value": "/tmp/test_n8n.mp4",
              "type": "string"
            },
            {
              "id": "f8ea0381-5a65-40ef-9d93-634a459d6d78",
              "name": "PATHurl",
              "value": "http://127.0.0.1:7860/tmp/test_n8n.mp4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1152,
        4848
      ],
      "id": "b8ec17e0-9ef2-4751-8607-5a4ffea93ef7",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a60e3313-6448-438b-93fc-7b82cdd3dd17",
              "name": "fileName",
              "value": "/extracted/1756864102599/250903_091803_855_3375_37.mp4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1504,
        5088
      ],
      "id": "931310f1-7885-494d-87d6-c5d27cca2fea",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"video\": \"{{ $json.fileName.replace('/extracted/','') }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1728,
        5088
      ],
      "id": "cba3e83d-e6f2-494d-b6ef-3689b9309f8c",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a60e3313-6448-438b-93fc-7b82cdd3dd17",
              "name": "stderr",
              "value": "ffmpeg version 6.1.2 Copyright (c) 2000-2024 the FFmpeg developers\\n  built with gcc 14.2.0 (Alpine 14.2.0)\\n  configuration: --prefix=/usr --disable-librtmp --disable-lzma --disable-static --disable-stripping --enable-avfilter --enable-gpl --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libdav1d --enable-libdrm --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libharfbuzz --enable-libmp3lame --enable-libopenmpt --enable-libopus --enable-libplacebo --enable-libpulse --enable-librav1e --enable-librist --enable-libsoxr --enable-libsrt --enable-libssh --enable-libtheora --enable-libv4l2 --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-lto=auto --enable-lv2 --enable-openssl --enable-pic --enable-postproc --enable-pthreads --enable-shared --enable-vaapi --enable-vdpau --enable-version3 --enable-vulkan --optflags=-O3 --enable-libjxl --enable-libsvtav1 --enable-libvpl\\n  libavutil      58. 29.100 / 58. 29.100\\n  libavcodec     60. 31.102 / 60. 31.102\\n  libavformat    60. 16.100 / 60. 16.100\\n  libavdevice    60.  3.100 / 60.  3.100\\n  libavfilter     9. 12.100 /  9. 12.100\\n  libswscale      7.  5.100 /  7.  5.100\\n  libswresample   4. 12.100 /  4. 12.100\\n  libpostproc    57.  3.100 / 57.  3.100\\n[mov,mp4,m4a,3gp,3g2,mj2 @ 0x79aa7957d800] Auto-inserting h264_mp4toannexb bitstream filter\\nInput #0, concat, from '/extracted/1756864102599/file_list.txt':\\n  Duration: N/A, start: 0.000000, bitrate: 1206 kb/s\\n  Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p(progressive), 832x480, 1206 kb/s, 30 fps, 30 tbr, 15360 tbn\\n    Metadata:\\n      handler_name    : VideoHandler\\n      vendor_id       : [0][0][0][0]\\nOutput #0, mp4, to '/extracted/1756864102599/final_video.mp4':\\n  Metadata:\\n    encoder         : Lavf60.16.100\\n  Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p(progressive), 832x480, q=2-31, 1206 kb/s, 30 fps, 30 tbr, 15360 tbn\\n    Metadata:\\n      handler_name    : VideoHandler\\n      vendor_id       : [0][0][0][0]\\nStream mapping:\\n  Stream #0:0 -> #0:0 (copy)\\nPress [q] to stop, [?] for help\\nsize=       0kB time=-00:00:00.06 bitrate=  -0.0kbits/s speed=N/A    \\r[mov,mp4,m4a,3gp,3g2,mj2 @ 0x79aa76af6340] Auto-inserting h264_mp4toannexb bitstream filter\\n[out#0/mp4 @ 0x79aa796d9580] video:1387kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.426655%\\nsize=    1393kB time=00:00:09.56 bitrate=1193.0kbits/s speed= 214x",
              "type": "string"
            },
            {
              "id": "d1d2900c-ae6a-4336-81b3-b44cf6c86bce",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1504,
        5280
      ],
      "id": "0f186f09-88b4-4bc0-aef0-5f91e10f8aa6",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"resultVideo\": \"{{ $json.stderr.match(/to '\\/extracted\\/([^']+)'/)[1] }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1728,
        5280
      ],
      "id": "d1a6c2c6-8d59-410b-87f8-1aaf29165fa6",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "voice",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1008,
        4656
      ],
      "id": "37f98275-3c37-41bf-9cd9-e5ed525d4972",
      "name": "Webhook1",
      "webhookId": "860ca482-a1ae-4999-a6af-4ac220ad57cc"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        400,
        5568
      ],
      "id": "5aef284f-8c69-4460-9c21-6f4b5a15419a",
      "name": "Wait12",
      "webhookId": "36329ec2-d374-46f4-a9ab-c7a841e1ebfe"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -944,
        5568
      ],
      "id": "2693467d-51bf-4f01-b49e-690a0d59a811",
      "name": "Wait13",
      "webhookId": "5a4fb6af-103c-45d9-8f2d-177b98f219cc"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $json[\"stdout\"]; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst textFiles = [];\nconst imageFiles = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.txt')) {\n    textFiles.push(file);\n  } else if (file.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\n    imageFiles.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      textFiles,\n      imageFiles,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        176,
        5568
      ],
      "id": "5d9e048c-6fb1-49a8-b9b7-230df58c004f",
      "name": "Code8"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -496,
        5568
      ],
      "id": "19316887-753c-46d5-86a1-951abbf18231",
      "name": "Wait14",
      "webhookId": "ee37bd18-1622-4b9c-bb28-274689d48ff6"
    },
    {
      "parameters": {
        "jsCode": "const folders = $json[\"stdout\"].trim().split('\\n');\nreturn folders.map(path => ({ json: { folderPath: path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1168,
        5568
      ],
      "id": "cbace83b-1505-43d3-8a3f-6462de567f31",
      "name": "Code13"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.jpg\" -o -iname \"*.txt\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -48,
        5568
      ],
      "id": "c4e49491-f14a-4c39-a006-235341afd59d",
      "name": "Execute Command27"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -272,
        5568
      ],
      "id": "fa110b01-6ac4-484c-ac14-48cd7e98a6ee",
      "name": "Code14"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -type d -mindepth 2 -maxdepth 2\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1392,
        5568
      ],
      "id": "2c11c2df-07ce-49d3-943f-dced1c286a50",
      "name": "Execute Command8"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -720,
        5568
      ],
      "id": "606e8130-96eb-4ffe-b424-6910b5dea164",
      "name": "Loop Over Items3",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/tts",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "voice",
              "value": "={{ $json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1488,
        5568
      ],
      "id": "87d70448-5578-4d16-8b66-050f6ff93dcb",
      "name": "voice"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code8').item.json.textFiles[1] }}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1296,
        5568
      ],
      "id": "7fcc296a-40ce-46bc-892a-2969c859f337",
      "name": "voice1"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code8').item.json.textFiles[0] }}\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        624,
        5568
      ],
      "id": "7efb59c1-7096-469b-9826-2c29e394dd92",
      "name": "prompt"
    },
    {
      "parameters": {
        "content": "## เพิ่มอันนี้",
        "height": 240,
        "width": 832
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1264,
        5488
      ],
      "typeVersion": 1,
      "id": "01889a63-d3a7-4464-9aa1-d9b2eb8c0330",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('Webhook1').item.json.body.extractPath }}/{{$binary.data.fileName}}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1712,
        5568
      ],
      "id": "45c0c15b-0157-4592-b376-cd47acf9c851",
      "name": "savevoice"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" >> {{ $('Webhook1').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1936,
        5632
      ],
      "id": "a14164bd-3fdd-457d-aade-ece307a482d6",
      "name": "list_voice"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{$('Webhook1').item.json.body.extractPath }}/file_list.txt -c copy temp_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        688,
        5280
      ],
      "id": "b4004422-c01b-4803-b7cf-3981041118ba",
      "name": "mp"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{$('Webhook1').item.json.body.extractPath }}/voice_list.txt -c copy temp_audio.m4a"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        912,
        5280
      ],
      "id": "fad54110-45dd-451b-8f28-5d2e2330b564",
      "name": "voice3"
    },
    {
      "parameters": {
        "command": "=ffmpeg -i temp_video.mp4 -i temp_audio.m4a -c:v copy -c:a copy -shortest {{$('Webhook1').item.json.body.extractPath }}/final_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1136,
        5280
      ],
      "id": "6ba8d46d-25e1-41e4-bac9-82e87c301d1c",
      "name": "final1"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook1').item.json.body.extractPath }}/*.mp4 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook1').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -496,
        5376
      ],
      "id": "c2bb7d8c-cdaa-432f-b6e2-046e1279c759",
      "name": "Execute Command2"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook1').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook1').item.json.body.extractPath }}/final_video.mp4\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook1').item.json.body.extractPath }}/file_list.txt -f concat -safe 0 -i {{ $('Webhook1').item.json.body.extractPath }}/voice_list.txt -c:v copy -c:a aac -shortest {{ $('Webhook1').item.json.body.extractPath }}/final_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -48,
        5376
      ],
      "id": "c859e7a8-9208-48ae-995d-2be763e672b7",
      "name": "Execute Command14"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook1').item.json.body.extractPath }}/*.wav | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook1').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -272,
        5376
      ],
      "id": "0195f60b-250e-4715-a8b7-62d2342f29a1",
      "name": "Execute Command7"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code5').item.json.textFiles[1] }}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1760,
        2128
      ],
      "id": "ce29bb02-f289-495b-86bb-3530749cdaed",
      "name": "voice4"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('Webhook3').item.json.body.extractPath }}/tts_{{$json.job_id}}_{{ $('set_voice').item.json.timestamp }}.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2896,
        2112
      ],
      "id": "bcd638a9-8018-4d52-a60e-bbabf10ef250",
      "name": "savevoice1"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" > {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        3088,
        2112
      ],
      "id": "e8fa13a7-e592-4bf6-830b-07e598110910",
      "name": "list_voice1"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code5').item.json.textFiles[0] }}\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        960,
        2128
      ],
      "id": "65dda79c-37dd-4eb7-88b3-7b7aa0d3d5a4",
      "name": "prompt1"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" > {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4912,
        2032
      ],
      "id": "17dc8a04-4648-44e4-91d6-3df3d4d5c929",
      "name": "listvdo"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook3').item.json.body.extractPath }}/final_video.mp4\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt -c:v copy -c:a aac -shortest {{ $('Webhook3').item.json.body.extractPath }}/final_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1696,
        3472
      ],
      "id": "894f0490-ee3b-4e2d-a0ed-9ace15fcabe2",
      "name": "Execute Command15"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/tts",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "voice",
              "value": "={{ $json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        976,
        3456
      ],
      "id": "fa3c9d69-581a-4502-9f8a-59d34d25dcbb",
      "name": "voice_ENG"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/tts-th",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "voice",
              "value": "={{ $json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2224,
        3472
      ],
      "id": "1c358041-466f-4c84-a230-36865b4bddf9",
      "name": "voiceTHAI"
    },
    {
      "parameters": {
        "content": "## TH .wav\n",
        "height": 208,
        "width": 688,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        1616
      ],
      "typeVersion": 1,
      "id": "390ccc33-62d8-42cd-8bd8-fdde5af3bf6a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook3').item.json.body.extractPath }}/*.mp3 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1472,
        3472
      ],
      "id": "1f6ef9eb-9ea7-436b-baea-ec45722acc80",
      "name": "THAI"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook3').item.json.body.extractPath }}/*.mp4 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1248,
        3472
      ],
      "id": "3a24023b-9f67-44ce-bd64-e453cfd8809b",
      "name": "THAI1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "voice",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        2816,
        3216
      ],
      "id": "be86f518-adf3-48a0-867a-588da3d43a81",
      "name": "Webhook4",
      "webhookId": "860ca482-a1ae-4999-a6af-4ac220ad57cc"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        528,
        4064
      ],
      "id": "06af80bc-2356-4a3e-81d8-82c43408edca",
      "name": "Wait15",
      "webhookId": "36329ec2-d374-46f4-a9ab-c7a841e1ebfe"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -816,
        3872
      ],
      "id": "96adc638-e7c2-4df2-8c15-ab0c536aa0d8",
      "name": "Wait16",
      "webhookId": "5a4fb6af-103c-45d9-8f2d-177b98f219cc"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $json[\"stdout\"]; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst textFiles = [];\nconst imageFiles = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.txt')) {\n    textFiles.push(file);\n  } else if (file.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\n    imageFiles.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      textFiles,\n      imageFiles,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        304,
        4064
      ],
      "id": "b155df24-b200-4305-ac9b-61e22b98041c",
      "name": "Code17"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -368,
        4064
      ],
      "id": "360e352a-d48d-4e6b-82e1-95b6ca78f305",
      "name": "Wait17",
      "webhookId": "ee37bd18-1622-4b9c-bb28-274689d48ff6"
    },
    {
      "parameters": {
        "jsCode": "const folders = $json[\"stdout\"].trim().split('\\n');\nreturn folders.map(path => ({ json: { folderPath: path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1040,
        3872
      ],
      "id": "b8b3c33f-699e-4d37-9344-834d34bd54b2",
      "name": "Code18"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.jpg\" -o -iname \"*.txt\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        80,
        4064
      ],
      "id": "daac9ed4-b083-4431-ab31-c5de62ebc0e7",
      "name": "Execute Command28"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -144,
        4064
      ],
      "id": "ac0e30be-e1f5-4da3-b702-6001a67d4a21",
      "name": "Code19"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -type d -mindepth 2 -maxdepth 2\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1264,
        3872
      ],
      "id": "a03ceace-cc10-4eb3-90b7-26320dd4570d",
      "name": "Execute Command16"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -592,
        3968
      ],
      "id": "e51b0d7e-073b-4c56-965a-7c3f6a9199a3",
      "name": "Loop Over Items4",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/tts",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "voice",
              "value": "={{ $json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1264,
        4064
      ],
      "id": "92821ff3-e331-4305-842f-eb4846eb995b",
      "name": "voice2"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code17').item.json.textFiles[1] }}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1488,
        4064
      ],
      "id": "0c5864f1-f408-4725-9489-975f25124a25",
      "name": "voice5"
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code17').item.json.textFiles[0] }}\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        752,
        4064
      ],
      "id": "59dab0ab-875b-4cd3-b8f4-725eb9f77c3c",
      "name": "prompt2"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('Webhook4').item.json.body.extractPath }}/{{$binary.data.fileName}}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1040,
        4064
      ],
      "id": "76aa87ee-83a7-4b35-98fb-ce935d97cb4a",
      "name": "savevoice2"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" >> {{ $('Webhook4').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -816,
        4064
      ],
      "id": "9af94f80-f5c8-4d0d-b2ef-e01e32b15d25",
      "name": "list_voice2"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook4').item.json.body.extractPath }}/*.mp4 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook4').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -368,
        3872
      ],
      "id": "20ab8294-f7e7-482f-a529-d1dabdea4b20",
      "name": "Execute Command4"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook4').item.json.body.extractPath }}/final_video.mp4\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/file_list.txt -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/voice_list.txt -c:v copy -c:a aac -shortest {{ $('Webhook4').item.json.body.extractPath }}/final_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        80,
        3872
      ],
      "id": "8aeae95a-5b5d-41ba-9fdb-c46f8d06dcd1",
      "name": "Execute Command19"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook4').item.json.body.extractPath }}/*.wav | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook4').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -144,
        3872
      ],
      "id": "4f3c1d35-fb82-4660-8232-d7de4b250c72",
      "name": "Execute Command20"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a text reformatter for video and image prompts. \nYour job is to take user input text and convert it into a single, concise, motion-focused sentence.  \n\nRules:\n- Keep all original words and meaning from the user; do not remove or omit any content.  \n- Focus on dynamic movement and action.  \n- Prefer large and expressive motions (dancing, jumping, running) over small or static ones.  \n- Describe subject first, then motion, then additional details.  \n- Stay concise and natural; output one flowing sentence.  \n- Do not add explanations, questions, or extra text.  \n- Do not use arrows (→) or labels like \"output\".  \n\nInput:{{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1456,
        2128
      ],
      "id": "21debca1-fff6-44b5-8955-6a37654e0366",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        832,
        5568
      ],
      "id": "aac71f59-11c7-4b63-adc7-b9da536e3321",
      "name": "Wait2",
      "webhookId": "ff8fc899-2a3a-4ce8-ad88-72e7af5c4697"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Webhook1').item.json.body['E-mail'] }}",
        "subject": "=Hello [execution ID : {{ $execution.id }}] ",
        "emailType": "text",
        "message": "  Your workflow has finished running successfully. All tasks have been completed, and the results are now ready for review.  Thank you for using our service!  Best regards, |[Your Team / System Name]",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1056,
        5568
      ],
      "id": "e597d10a-c074-4966-a5e8-690285b6802c",
      "name": "Send a message",
      "webhookId": "af7fc2d6-d4bd-4475-acf0-299b3d993e7a",
      "credentials": {
        "gmailOAuth2": {
          "id": "U04Cf0fbRg6K55xv",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3040,
        4736
      ],
      "id": "0d6996af-2fb8-4f4f-b4e0-50c3f7f7a3e3",
      "name": "Wait18",
      "webhookId": "36329ec2-d374-46f4-a9ab-c7a841e1ebfe"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1696,
        4656
      ],
      "id": "03db66a6-eedb-4859-a7e1-fe9aa0fff00f",
      "name": "Wait19",
      "webhookId": "5a4fb6af-103c-45d9-8f2d-177b98f219cc"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $json[\"stdout\"]; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst textFiles = [];\nconst imageFiles = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.txt')) {\n    textFiles.push(file);\n  } else if (file.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\n    imageFiles.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      textFiles,\n      imageFiles,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2816,
        4736
      ],
      "id": "6e387539-424d-4498-9343-cd8c387cf1dd",
      "name": "Code16"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2144,
        4736
      ],
      "id": "30a88bf9-e3e0-4222-8e35-d5b62250ef19",
      "name": "Wait20",
      "webhookId": "ee37bd18-1622-4b9c-bb28-274689d48ff6"
    },
    {
      "parameters": {
        "jsCode": "const folders = $json[\"stdout\"].trim().split('\\n');\nreturn folders.map(path => ({ json: { folderPath: path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1472,
        4656
      ],
      "id": "6ddc689a-2ea0-4b34-8956-316029bc3ccb",
      "name": "Code20"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.jpg\" -o -iname \"*.txt\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2592,
        4736
      ],
      "id": "f06ed16a-88e7-44bc-9138-a8278f3a3821",
      "name": "Execute Command29"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2368,
        4736
      ],
      "id": "bfc180d2-2a3d-47bb-bd12-a24fea567398",
      "name": "Code21"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -type d -mindepth 2 -maxdepth 2\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1248,
        4656
      ],
      "id": "996bd8f8-3cf7-44fc-beca-2340c22946ac",
      "name": "Execute Command21"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1920,
        4656
      ],
      "id": "1a45e554-c921-4ede-abc5-fb425927abd1",
      "name": "Loop Over Items5",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "command": "=cat \"{{ $('Code16').item.json.textFiles[1] }}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2192,
        4960
      ],
      "id": "1e625777-519c-4357-a759-2c5eeb6bd543",
      "name": "voice6"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('Webhook1').item.json.body.extractPath }}/{{$binary.data.fileName}}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2640,
        4960
      ],
      "id": "1cf05f1b-bfd6-49eb-a17e-5a271e0abbc3",
      "name": "savevoice3"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" >> {{ $('Webhook1').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2864,
        4960
      ],
      "id": "a06b36f2-53cd-4b49-91ef-b3dff8a40391",
      "name": "list_voice3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/tts",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "voice",
              "value": "={{ $json.stdout }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2416,
        4960
      ],
      "id": "024a1ef7-df4b-40dc-a0c7-23b6daec73e8",
      "name": "voice_ENG1"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('Code5').item.json.imageFiles[0] }}",
        "options": {
          "dataPropertyName": "file"
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3344,
        2112
      ],
      "id": "2fdfe889-1501-41f3-a55d-af9a8cf9f11a",
      "name": "pic",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"resultVideo\": \"{{ $json.stderr.match(/to '\\/extracted\\/([^']+)'/)[1] }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2896,
        4496
      ],
      "id": "66afa02a-0545-4e3f-9d6c-67e70e109087",
      "name": "HTTP Request8"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook1').item.json.body.extractPath }}/*.mp4 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook1').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2224,
        4496
      ],
      "id": "bb15cc69-cd59-414c-b24f-ccc82bbe3a48",
      "name": "Execute Command22"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook1').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook1').item.json.body.extractPath }}/final_video.mp4\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook1').item.json.body.extractPath }}/file_list.txt -f concat -safe 0 -i {{ $('Webhook1').item.json.body.extractPath }}/voice_list.txt -c:v copy -c:a aac -shortest {{ $('Webhook1').item.json.body.extractPath }}/final_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2672,
        4496
      ],
      "id": "a5460aa1-8e38-4e94-a589-90b20389e678",
      "name": "Execute Command32"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook1').item.json.body.extractPath }}/*.wav | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook1').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2448,
        4496
      ],
      "id": "34f317bb-b087-48ba-8020-cd8f52bf2496",
      "name": "Execute Command33"
    },
    {
      "parameters": {
        "content": "## THAI .mp3\n- เปลี่ยนแค่ตัวเลขของ web hook ทั้งหมด\n",
        "height": 240,
        "width": 1168,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1216,
        3376
      ],
      "typeVersion": 1,
      "id": "63c4f468-e0a9-43ad-8c1b-a7549c4afba7",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.70.219:20001/generate_async",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"gen_text\": \"{{ $json.gen_text }}\",\n    \"remove_silence\": {{ $json.remove_silence }},\n    \"cross_fade_duration\": {{ $json.cross_fade_duration }},\n    \"nfe_step\": {{ $json.nfe_step }},\n    \"speed\": {{ $json.speed }},\n    \"cfg_strength\": {{ $json.cfg_strength }},\n    \"max_chars\": {{ $json.max_chars }},\n    \"seed\": {{ $json.seed }},\n    \"lang_process\": \"{{ $json.lang_process }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2080,
        2128
      ],
      "id": "ce9f91fb-fab3-49e9-83e9-86a62ffc6dca",
      "name": "gen_voice"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "310dcc44-ddab-4f78-b062-0d54a52449b1",
              "name": "gen_text",
              "value": "={{ $json.stdout }}",
              "type": "string"
            },
            {
              "id": "e59f90ce-70d8-41a9-ad4e-e7366dbbfaf9",
              "name": "remove_silence",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "e87eef17-5717-4b03-a9de-1488a272c13a",
              "name": "cross_fade_duration",
              "value": 0.15,
              "type": "number"
            },
            {
              "id": "05625e4d-73fc-4a24-98a4-ac19c6fe6cf6",
              "name": "nfe_step",
              "value": 32,
              "type": "number"
            },
            {
              "id": "e207760b-adf2-435a-967c-6940117fb4f5",
              "name": "speed",
              "value": 1,
              "type": "number"
            },
            {
              "id": "186a527a-1c48-46e6-9b79-cb1b15627e72",
              "name": "cfg_strength",
              "value": 2,
              "type": "number"
            },
            {
              "id": "6bbf23f2-8e0b-4f82-b8f3-38a66c4dec1b",
              "name": "max_chars",
              "value": 300,
              "type": "number"
            },
            {
              "id": "2b858201-2394-4ad0-a6a0-22b3777b5cde",
              "name": "seed",
              "value": -1,
              "type": "number"
            },
            {
              "id": "1907460d-085e-4fb7-abc0-2653a3743d35",
              "name": "lang_process",
              "value": "Default",
              "type": "string"
            },
            {
              "id": "eb8a908a-8ed6-4524-bc10-b9dfbe4ac5a9",
              "name": "timestamp",
              "value": "={{ Math.floor(Date.now()/1000) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        2128
      ],
      "id": "2ccf6a1c-f30d-4165-bb89-01bc001d2bc9",
      "name": "set_voice"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook3').item.json.body.extractPath }}/*.mp4 | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -256,
        1680
      ],
      "id": "e77973fa-23a4-4a5f-826e-f60db050c903",
      "name": "mp4"
    },
    {
      "parameters": {
        "command": "=ls {{$('Webhook3').item.json.body.extractPath }}/*.wav | sed \"s/^/file '/;s/$/'/\" > {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -32,
        1680
      ],
      "id": "bb26e222-d74a-4ba0-b238-813af2b94dd1",
      "name": "wav"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt -c copy {{ $('Webhook3').item.json.body.extractPath }}/final_video.mp4\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt -c:v copy -c:a aac -shortest {{ $('Webhook3').item.json.body.extractPath }}/final_video.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        192,
        1680
      ],
      "id": "6a08c344-ebf6-4732-8a49-17f5de10ad59",
      "name": "final_output"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:3000/api/callback",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"executionId\": \"{{ $execution.id }}\",\n  \"resultVideo\": \"{{ $('reformat4').item.json.filePath.replace('/extracted/','') }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        688,
        1936
      ],
      "id": "f3a61860-157f-48fa-be2c-aa7186282f70",
      "name": "final"
    },
    {
      "parameters": {
        "model": "scb10x/llama3.1-typhoon2-8b-instruct:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1504,
        2320
      ],
      "id": "75b6196c-20e6-4715-89ce-402d3df4781b",
      "name": "reformat",
      "credentials": {
        "ollamaApi": {
          "id": "9LIpV3jV6GmvJHjV",
          "name": "2computer"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Translate the following text into English{{ $json.stdout }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1152,
        2128
      ],
      "id": "b35fb20c-17a0-4732-b2cf-2a049c24a2ab",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20001/jobs/{{ $('gen_voice').item.json.job_id }}/progress ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        768,
        3456
      ],
      "id": "db25596c-38f8-4b5e-bc8a-c092329bbd7d",
      "name": "detail-f5"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2912,
        2416
      ],
      "id": "17c5e769-9208-4162-91a5-1ec10b695920",
      "name": "loop_processing",
      "webhookId": "c7b07b8f-df58-493b-9ddd-fd87ba497ad4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "673a61d2-307f-49aa-b5db-b104bde202b4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "failed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2672,
        2304
      ],
      "id": "93fd27f8-ef38-49f1-968e-b322a7d22f1b",
      "name": "chech_failed"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b2d0ee2f-0d27-4600-8a3c-71576a6831d9",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2448,
        2128
      ],
      "id": "4c030993-304a-46ac-b48d-d3052b2b1026",
      "name": "check_completed"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:7860/gradio_api/file={{ $json.result.generated_audio_path }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2736,
        2112
      ],
      "id": "cc21037e-696d-4178-822e-1f8878db9c95",
      "name": "urlvoice"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a text reformatter for video and image prompts. \nYour job is to take user input text and convert it into a single, concise, motion-focused sentence.  \n\nRules:\n- Keep all original words and meaning from the user; do not remove or omit any content.  \n- Focus on dynamic movement and action.  \n- Prefer large and expressive motions (dancing, jumping, running) over small or static ones.  \n- Describe subject first, then motion, then additional details.  \n- Stay concise and natural; output one flowing sentence.  \n- Do not add explanations, questions, or extra text.  \n- Do not use arrows (→) or labels like \"output\".  \n\nInput:{{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        960,
        3712
      ],
      "id": "9477a1fc-621b-447f-a0f8-d7233384da14",
      "name": "AI Agent5"
    },
    {
      "parameters": {
        "model": "scb10x/llama3.1-typhoon2-8b-instruct:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1008,
        3904
      ],
      "id": "5eabec5e-0163-4f96-b86c-ba414df80bf8",
      "name": "reformat1",
      "credentials": {
        "ollamaApi": {
          "id": "9LIpV3jV6GmvJHjV",
          "name": "2computer"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Translate the following text into English{{ $json.stdout }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        656,
        3712
      ],
      "id": "a3572a99-0161-4336-92b7-c353c65fd842",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "model": "scb10x/typhoon-translate-4b:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        528,
        3904
      ],
      "id": "8e7904c2-6f9d-44cf-bffa-3f70b346e6dd",
      "name": "Ollama Chat Model2",
      "credentials": {
        "ollamaApi": {
          "id": "9LIpV3jV6GmvJHjV",
          "name": "2computer"
        }
      }
    },
    {
      "parameters": {
        "model": "scb10x/typhoon-translate-4b:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1024,
        2320
      ],
      "id": "51cacc75-bea5-4275-8128-f83251114693",
      "name": "translate_EN",
      "credentials": {
        "ollamaApi": {
          "id": "9LIpV3jV6GmvJHjV",
          "name": "2computer"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{$('set_voice1').item.json.extractPath}}/tts_{{$json.job_id}}_{{ $('set_voice1').item.json.timestamp }}.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2608,
        3856
      ],
      "id": "256ac3c9-8d2e-4418-ac9e-4f6eb5ec0fcc",
      "name": "savevoice4"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2640,
        4160
      ],
      "id": "c81320ae-e495-425e-8e34-ef385f8b0a20",
      "name": "loop_processing2",
      "webhookId": "c7b07b8f-df58-493b-9ddd-fd87ba497ad4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "673a61d2-307f-49aa-b5db-b104bde202b4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "failed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2400,
        4048
      ],
      "id": "fce8f422-b335-4617-9e5a-780ac0fc8482",
      "name": "chech_failed2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b2d0ee2f-0d27-4600-8a3c-71576a6831d9",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2176,
        3872
      ],
      "id": "537ae462-4676-459a-8f6d-47e4b5d877d1",
      "name": "check_completed2"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20001/status/{{ $('gen_voice1').item.json.job_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1984,
        3872
      ],
      "id": "f2fb72d5-a296-4eff-a2c0-c9a59c422392",
      "name": "HTTP Request9"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:7860/gradio_api/file={{ $json.result.generated_audio_path }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2384,
        3856
      ],
      "id": "d1ba881c-c063-4266-85eb-002911454314",
      "name": "urlvoice1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.70.219:20001/generate_async",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"gen_text\": \"{{ $json.gen_text }}\",\n    \"remove_silence\": {{ $json.remove_silence }},\n    \"cross_fade_duration\": {{ $json.cross_fade_duration }},\n    \"nfe_step\": {{ $json.nfe_step }},\n    \"speed\": {{ $json.speed }},\n    \"cfg_strength\": {{ $json.cfg_strength }},\n    \"max_chars\": {{ $json.max_chars }},\n    \"seed\": {{ $json.seed }},\n    \"lang_process\": \"{{ $json.lang_process }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1776,
        3872
      ],
      "id": "1cbbe3c3-e263-44a3-8958-488dfc785e88",
      "name": "gen_voice1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "310dcc44-ddab-4f78-b062-0d54a52449b1",
              "name": "gen_text",
              "value": "อยากจะมีแฟนแล้วมันโสดมาตั้งนานจะคุยก็ยังไม่กล้าจีบใครก็ไม่เก่ง",
              "type": "string"
            },
            {
              "id": "e59f90ce-70d8-41a9-ad4e-e7366dbbfaf9",
              "name": "remove_silence",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "e87eef17-5717-4b03-a9de-1488a272c13a",
              "name": "cross_fade_duration",
              "value": 0.15,
              "type": "number"
            },
            {
              "id": "05625e4d-73fc-4a24-98a4-ac19c6fe6cf6",
              "name": "nfe_step",
              "value": 32,
              "type": "number"
            },
            {
              "id": "e207760b-adf2-435a-967c-6940117fb4f5",
              "name": "speed",
              "value": 1,
              "type": "number"
            },
            {
              "id": "186a527a-1c48-46e6-9b79-cb1b15627e72",
              "name": "cfg_strength",
              "value": 2,
              "type": "number"
            },
            {
              "id": "6bbf23f2-8e0b-4f82-b8f3-38a66c4dec1b",
              "name": "max_chars",
              "value": 300,
              "type": "number"
            },
            {
              "id": "2b858201-2394-4ad0-a6a0-22b3777b5cde",
              "name": "seed",
              "value": -1,
              "type": "number"
            },
            {
              "id": "1907460d-085e-4fb7-abc0-2653a3743d35",
              "name": "lang_process",
              "value": "Default",
              "type": "string"
            },
            {
              "id": "6b906390-2693-4c50-9fd0-7a4a9f4acba2",
              "name": "extractPath",
              "value": "/extracted/987654321",
              "type": "string"
            },
            {
              "id": "738816d5-4921-4a79-84ef-bd0b6dc03553",
              "name": "timestamp",
              "value": "={{ Math.floor(Date.now()/1000) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1616,
        3872
      ],
      "id": "2ab031d4-a6d7-4d08-92ba-1405e5f62cd2",
      "name": "set_voice1"
    },
    {
      "parameters": {
        "url": "=http://192.168.70.219:20001/status/{{ $('gen_voice').item.json.job_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2272,
        2128
      ],
      "id": "3dbba339-a4fb-49cd-8a52-3aa4be0bc4ef",
      "name": "status_voice"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('Webhook3').item.json.body.extractPath }}/{{$binary.data.fileName}}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4720,
        2032
      ],
      "id": "4bc16849-c768-4e1c-9a61-d15a5374a0fa",
      "name": "save_vdo"
    },
    {
      "parameters": {
        "content": "## TEST SAVE VOICE",
        "height": 544,
        "width": 1552,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1376,
        3808
      ],
      "typeVersion": 1,
      "id": "376c570c-b56e-44cb-b983-a81ee03b2436",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.path }}/{{ $json.filename }}'\" > {{ $json.extracpath }}/voice_list.txt\n\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4608,
        3376
      ],
      "id": "5bd9341c-fafe-4bc4-bb60-91e4822e8820",
      "name": "list_voice4"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.audio[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4176,
        3376
      ],
      "id": "d2385d11-384e-4526-a00f-2aa4ecca1d45",
      "name": "savevoice5"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.path }}/{{ $json.filename }}'\" > {{ $json.extracpath }}/file_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5232,
        3376
      ],
      "id": "25d95ac6-e357-4fc4-abd3-b7cf50fd7fd0",
      "name": "listvdo1"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('Code24').item.json.mp4[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4832,
        3376
      ],
      "id": "98b57806-d12c-4d0f-8dca-7e23397fbedc",
      "name": "save_vdo1"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/file_list.txt -c copy -f null -\n\n# รันบรรทัดสอง เพื่อสร้างไฟล์ timestamp_final_video.mp4 จริง ๆ\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/file_list.txt \\\n  -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/voice_list.txt \\\n  -c:v copy -c:a aac -shortest {{ $('Webhook4').item.json.body.extractPath }}/{{ $json.timestamp }}_final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5040,
        2704
      ],
      "id": "e6c0a0d8-796a-4ae1-98b5-7f4b68d7e4c8",
      "name": "final_output1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "738816d5-4921-4a79-84ef-bd0b6dc03553",
              "name": "timestamp",
              "value": "={{ Math.floor(Date.now()/1000) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4880,
        2704
      ],
      "id": "3f8c8f6c-5e39-4d8a-a6e7-6e49d1ff0fd7",
      "name": "set_voice2"
    },
    {
      "parameters": {
        "command": "=while read -r line; do\n  f=$(echo \"$line\" | sed \"s/file '\\(.*\\)'/\\1/\")\n  rm -f \"{{ $('Webhook4').item.json.body.extractPath }}/$f\"\ndone < \"{{ $('Webhook4').item.json.body.extractPath }}/file_list.txt\"\n\nwhile read -r line; do\n  f=$(echo \"$line\" | sed \"s/file '\\(.*\\)'/\\1/\")\n  rm -f \"{{ $('Webhook4').item.json.body.extractPath }}/$f\"\ndone < \"{{ $('Webhook4').item.json.body.extractPath }}/voice_list.txt\"\n\nrm -f {{ $('Webhook4').item.json.body.extractPath }}/file_list.txt \\\n      {{ $('Webhook4').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5200,
        2704
      ],
      "id": "d7c502a9-fc97-4279-9431-c4219e760cfb",
      "name": "delete_clear"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" >> {{ $('Webhook4').item.json.body.extractPath }}/lastfinal_list.txt\n\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5776,
        2704
      ],
      "id": "569a6cc3-db0c-49e7-a7aa-182b877c2a1f",
      "name": "lastfinal_list"
    },
    {
      "parameters": {
        "jsCode": "// ดึง stderr ของ node ล่าสุด\nconst ffmpegOutput = $('final_output1').first().json.stderr;\n\n// regex หา path ของ final video\nconst match = ffmpegOutput.match(/to '([^']+_final_video\\.mp4)'/);\n\nif(match){\n  const filePath = match[1];\n  // return object สำหรับใช้ node ถัดไป\n  return [\n    {\n      json: {\n        filePath: filePath,\n        fileName: filePath.split('/').pop(),  // เช่น 1758162290_final_video.mp4\n        extractPath: filePath.split('/').slice(0,-1).join('/')\n      }\n    }\n  ];\n} else {\n  return [];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5376,
        2704
      ],
      "id": "a90fc58a-7aa8-4c07-a634-b3eff470f16f",
      "name": "reformat2"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.filePath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5568,
        2704
      ],
      "id": "46b4c879-b43d-49f9-b35f-962d13fbe179",
      "name": "readlastvdo"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook4').item.json.body.extractPath }}/lastfinal_list.txt -c copy {{ $('Webhook4').item.json.body.extractPath }}/output_final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4048,
        3040
      ],
      "id": "5259add6-aa3e-4630-b58f-f01d9e8d23f9",
      "name": "output_final"
    },
    {
      "parameters": {
        "jsCode": "const folders = $json[\"stdout\"].trim().split('\\n');\nreturn folders.map(path => ({ json: { folderPath: path } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3136,
        3216
      ],
      "id": "45fddf9d-740d-424e-9077-8ad82463e7d1",
      "name": "Code15"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -mindepth 1 -maxdepth 1 -type d\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2992,
        3216
      ],
      "id": "1acd2f08-bd37-40b8-8f23-e5237453d1f8",
      "name": "Execute Command6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3328,
        3216
      ],
      "id": "692a8d38-40d5-4521-b388-5133d94604f8",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "jsCode": "const rawOutput = $input.first().json.stdout; // ดึงค่า stdout จาก Execute Command\nconst lines = rawOutput.split('\\n'); // แยกด้วย newline\n\nconst mp4 = [];\nconst audio = [];\n\nfor (const line of lines) {\n  const file = line.trim();\n  if (!file) continue;\n\n  if (file.toLowerCase().endsWith('.wav')) {\n    audio.push(file);\n  } else if (file.toLowerCase().match(/.mp4/)) {\n    mp4.push(file);\n  }\n}\n\nreturn [\n  {\n    json: {\n      mp4,\n      audio\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3984,
        3376
      ],
      "id": "95246e67-9a30-467b-ab2c-a0bbf344a261",
      "name": "Code24"
    },
    {
      "parameters": {
        "command": "=find {{$json.nowFolder}} -type f \\( -iname \"*.mp4\" -o -iname \"*.wav\" \\)\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        3760,
        3376
      ],
      "id": "dc03c78b-6b3d-4178-b0b9-cd81c2a6ed89",
      "name": "Execute Command30"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    nowFolder: $json.folderPath,\n    time: new Date().toISOString()\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3536,
        3376
      ],
      "id": "b0cae7dc-3d2f-4f14-99d4-a94da91b4e09",
      "name": "Code25"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4ea49440-136f-4d28-9ab9-00ab81b0464e",
              "name": "path",
              "value": "={{ $('Code25').item.json.nowFolder }}",
              "type": "string"
            },
            {
              "id": "b4cd16d1-6295-490f-b78f-bf7ab6811e81",
              "name": "filename",
              "value": "={{ $json.fileName }}",
              "type": "string"
            },
            {
              "id": "789be627-7b41-44ca-a027-295633f81d4b",
              "name": "extracpath",
              "value": "={{ $('Webhook4').item.json.body.extractPath }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4384,
        3376
      ],
      "id": "d0b9fd6d-847a-4601-9f91-142b57d43a50",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3ad0caa1-a568-4c3f-88a1-7f99a4ed4302",
              "name": "path",
              "value": "={{ $('Code25').item.json.nowFolder }}",
              "type": "string"
            },
            {
              "id": "55fed135-b9ca-4a9c-a1d3-2521e96b23f9",
              "name": "filename",
              "value": "={{ $json.fileName }}",
              "type": "string"
            },
            {
              "id": "2a91eac7-655d-44e4-86a1-aeb36487335d",
              "name": "extracpath",
              "value": "={{ $('Webhook4').item.json.body.extractPath }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5040,
        3376
      ],
      "id": "bd89a516-dc53-4dd6-bda0-8aaf665327f9",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt -c copy -f null -\n\n# รันบรรทัดสอง เพื่อสร้างไฟล์ timestamp_final_video.mp4 จริง ๆ\nffmpeg -y -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt \\\n  -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt \\\n  -c:v copy -c:a aac -shortest {{ $('Webhook3').item.json.body.extractPath }}/{{ $json.timestamp }}_final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5312,
        2128
      ],
      "id": "5aa2c678-0c51-4c1e-8547-baed0055ab88",
      "name": "final_output2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "738816d5-4921-4a79-84ef-bd0b6dc03553",
              "name": "timestamp",
              "value": "={{ Math.floor(Date.now()/1000) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5152,
        2128
      ],
      "id": "d688b696-1522-4afc-bbb4-6ddf74277439",
      "name": "set_voice3"
    },
    {
      "parameters": {
        "command": "=while read -r line; do\n  f=$(echo \"$line\" | sed \"s/file '\\(.*\\)'/\\1/\")\n  rm -f \"{{ $('Webhook3').item.json.body.extractPath }}/$f\"\ndone < \"{{ $('Webhook3').item.json.body.extractPath }}/file_list.txt\"\n\nwhile read -r line; do\n  f=$(echo \"$line\" | sed \"s/file '\\(.*\\)'/\\1/\")\n  rm -f \"{{ $('Webhook3').item.json.body.extractPath }}/$f\"\ndone < \"{{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt\"\n\nrm -f {{ $('Webhook3').item.json.body.extractPath }}/file_list.txt \\\n      {{ $('Webhook3').item.json.body.extractPath }}/voice_list.txt\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5472,
        2128
      ],
      "id": "87895b04-1a3a-4b29-aac5-6b6aa5818d3c",
      "name": "delete_clear1"
    },
    {
      "parameters": {
        "command": "=echo \"file '{{ $json.fileName }}'\" >> {{ $('Webhook3').item.json.body.extractPath }}/lastfinal_list.txt\n\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6048,
        2128
      ],
      "id": "9dcc4f4e-ea4c-4a98-a675-6631af500ba1",
      "name": "lastfinal_list1"
    },
    {
      "parameters": {
        "jsCode": "// ดึง stderr ของ node ล่าสุด\nconst ffmpegOutput = $('final_output2').first().json.stderr;\n\n// regex หา path ของ final video\nconst match = ffmpegOutput.match(/to '([^']+_final_video\\.mp4)'/);\n\nif(match){\n  const filePath = match[1];\n  // return object สำหรับใช้ node ถัดไป\n  return [\n    {\n      json: {\n        filePath: filePath,\n        fileName: filePath.split('/').pop(),  // เช่น 1758162290_final_video.mp4\n        extractPath: filePath.split('/').slice(0,-1).join('/')\n      }\n    }\n  ];\n} else {\n  return [];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5648,
        2128
      ],
      "id": "c363321d-f081-4883-b2b8-03f8ac1e67d4",
      "name": "reformat3"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.filePath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5840,
        2128
      ],
      "id": "d3657918-d30f-4705-a098-3938c8817802",
      "name": "readlastvdo1"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i {{ $('Webhook3').item.json.body.extractPath }}/lastfinal_list.txt -c copy {{ $('Webhook3').item.json.body.extractPath }}/output_final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        336,
        1936
      ],
      "id": "3cb3f706-2bd9-4832-86e3-c74aa1de77c5",
      "name": "output_final1"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i /extracted/5/lastfinal_list.txt -c copy /extracted/5/output_final_video.mp4\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1856,
        2784
      ],
      "id": "c654b9bd-991d-42bd-bc95-bd144cfb58e9",
      "name": "output_final2"
    },
    {
      "parameters": {
        "amount": 60
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1072,
        2048
      ],
      "id": "9450a0ea-0edd-4bd6-8e35-fdb2245e6016",
      "name": "Wait21",
      "webhookId": "b7d06ba0-045b-4aa0-ac30-7dbaab68789b"
    },
    {
      "parameters": {
        "jsCode": "// ดึง stderr ของ node ล่าสุด\nconst ffmpegOutput = $('output_final1').first().json.stderr;\n\n// regex หา path ของ final video\nconst match = ffmpegOutput.match(/to '([^']+_final_video\\.mp4)'/);\n\nif(match){\n  const filePath = match[1];\n  // return object สำหรับใช้ node ถัดไป\n  return [\n    {\n      json: {\n        filePath: filePath,\n        fileName: filePath.split('/').pop(),  // เช่น 1758162290_final_video.mp4\n        extractPath: filePath.split('/').slice(0,-1).join('/')\n      }\n    }\n  ];\n} else {\n  return [];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        512,
        1936
      ],
      "id": "564aa244-f83b-47ad-bcac-2bc77d29eb8b",
      "name": "reformat4"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -type d -mindepth 2 -maxdepth 2\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1088,
        2240
      ],
      "id": "5be36ce8-453c-498a-9ef0-8d0102dfe134",
      "name": "2step"
    },
    {
      "parameters": {
        "command": "=find {{ $json.body.extractPath }} -type d -mindepth 1 -maxdepth 1\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -864,
        2048
      ],
      "id": "c34f1310-8b2f-4462-b4b0-8442e920b560",
      "name": "Execute Command3"
    },
    {
      "parameters": {
        "content": "## 1 step\n",
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -896,
        2000
      ],
      "typeVersion": 1,
      "id": "c552a4c0-1a34-4a7a-8f8f-0a4702bc0868",
      "name": "Sticky Note5"
    }
  ],
  "pinData": {},
  "connections": {
    "Wait5": {
      "main": [
        [
          {
            "node": "prompt1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "detail_progress": {
      "main": [
        [
          {
            "node": "check_completed1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "generate_async1": {
      "main": [
        [
          {
            "node": "detail_progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop_processing1": {
      "main": [
        [
          {
            "node": "detail_progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chech_failed1": {
      "main": [
        [],
        [
          {
            "node": "loop_processing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_completed1": {
      "main": [
        [
          {
            "node": "Status1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "chech_failed1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "urlVDO1": {
      "main": [
        [
          {
            "node": "save_vdo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status1": {
      "main": [
        [
          {
            "node": "urlVDO1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command24": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Execute Command24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "output_final1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Execute Command13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command13": {
      "main": [
        []
      ]
    },
    "callback": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "Execute Command10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait7": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command10": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait8": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Wait7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command25": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Execute Command25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command11": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "set_voice1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Execute Command12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command9": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Execute Command9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Execute Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status": {
      "main": [
        [
          {
            "node": "urlVDO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "detail_progress1": {
      "main": [
        [
          {
            "node": "Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command5": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait10": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Wait10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command26": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Execute Command26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Execute Command21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command27": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Execute Command27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command8": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice1": {
      "main": [
        [
          {
            "node": "voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prompt": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice": {
      "main": [
        [
          {
            "node": "savevoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "savevoice": {
      "main": [
        [
          {
            "node": "list_voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list_voice": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mp": {
      "main": [
        [
          {
            "node": "voice3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice3": {
      "main": [
        [
          {
            "node": "final1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command2": {
      "main": [
        [
          {
            "node": "Execute Command7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command7": {
      "main": [
        [
          {
            "node": "Execute Command14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice4": {
      "main": [
        [
          {
            "node": "set_voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "savevoice1": {
      "main": [
        [
          {
            "node": "list_voice1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list_voice1": {
      "main": [
        [
          {
            "node": "pic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prompt1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "listvdo": {
      "main": [
        [
          {
            "node": "set_voice3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command15": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voiceTHAI": {
      "main": [
        []
      ]
    },
    "THAI": {
      "main": [
        [
          {
            "node": "Execute Command15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "THAI1": {
      "main": [
        [
          {
            "node": "THAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook4": {
      "main": [
        [
          {
            "node": "Execute Command6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "prompt2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait16": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code17": {
      "main": [
        [
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait17": {
      "main": [
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code18": {
      "main": [
        [
          {
            "node": "Wait16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command28": {
      "main": [
        [
          {
            "node": "Code17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "Execute Command28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command16": {
      "main": [
        [
          {
            "node": "Code18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [
          {
            "node": "Execute Command4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice2": {
      "main": [
        [
          {
            "node": "savevoice2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice5": {
      "main": [
        [
          {
            "node": "voice2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prompt2": {
      "main": [
        []
      ]
    },
    "savevoice2": {
      "main": [
        [
          {
            "node": "list_voice2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list_voice2": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command4": {
      "main": [
        [
          {
            "node": "Execute Command20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command20": {
      "main": [
        [
          {
            "node": "Execute Command19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent4": {
      "main": [
        [
          {
            "node": "voice4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice_ENG": {
      "main": [
        []
      ]
    },
    "Wait18": {
      "main": [
        [
          {
            "node": "voice6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait19": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "Wait18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait20": {
      "main": [
        [
          {
            "node": "Code21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code20": {
      "main": [
        [
          {
            "node": "Wait19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command29": {
      "main": [
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code21": {
      "main": [
        [
          {
            "node": "Execute Command29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command21": {
      "main": [
        [
          {
            "node": "Code20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [
          {
            "node": "Execute Command22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice6": {
      "main": [
        [
          {
            "node": "voice_ENG1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "savevoice3": {
      "main": [
        [
          {
            "node": "list_voice3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "voice_ENG1": {
      "main": [
        [
          {
            "node": "savevoice3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pic": {
      "main": [
        [
          {
            "node": "generate_async1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list_voice3": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command22": {
      "main": [
        [
          {
            "node": "Execute Command33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command32": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command33": {
      "main": [
        [
          {
            "node": "Execute Command32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gen_voice": {
      "main": [
        [
          {
            "node": "status_voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_voice": {
      "main": [
        [
          {
            "node": "gen_voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mp4": {
      "main": [
        [
          {
            "node": "wav",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wav": {
      "main": [
        [
          {
            "node": "final_output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "final_output": {
      "main": [
        []
      ]
    },
    "reformat": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "detail-f5": {
      "main": [
        []
      ]
    },
    "chech_failed": {
      "main": [
        [],
        [
          {
            "node": "loop_processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_completed": {
      "main": [
        [
          {
            "node": "urlvoice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "chech_failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop_processing": {
      "main": [
        [
          {
            "node": "status_voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "urlvoice": {
      "main": [
        [
          {
            "node": "savevoice1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reformat1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "AI Agent5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "translate_EN": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "savevoice4": {
      "main": [
        []
      ]
    },
    "loop_processing2": {
      "main": [
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chech_failed2": {
      "main": [
        [],
        [
          {
            "node": "loop_processing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_completed2": {
      "main": [
        [
          {
            "node": "urlvoice1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "chech_failed2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "main": [
        [
          {
            "node": "check_completed2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "urlvoice1": {
      "main": [
        [
          {
            "node": "savevoice4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_voice1": {
      "main": [
        [
          {
            "node": "gen_voice1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gen_voice1": {
      "main": [
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status_voice": {
      "main": [
        [
          {
            "node": "check_completed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "save_vdo": {
      "main": [
        [
          {
            "node": "listvdo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "savevoice5": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "save_vdo1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list_voice4": {
      "main": [
        [
          {
            "node": "save_vdo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "listvdo1": {
      "main": [
        [
          {
            "node": "set_voice2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_voice2": {
      "main": [
        [
          {
            "node": "final_output1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "final_output1": {
      "main": [
        [
          {
            "node": "delete_clear",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete_clear": {
      "main": [
        [
          {
            "node": "reformat2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reformat2": {
      "main": [
        [
          {
            "node": "readlastvdo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "readlastvdo": {
      "main": [
        [
          {
            "node": "lastfinal_list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lastfinal_list": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command6": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [
          {
            "node": "output_final",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command30": {
      "main": [
        [
          {
            "node": "Code24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code25": {
      "main": [
        [
          {
            "node": "Execute Command30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code24": {
      "main": [
        [
          {
            "node": "savevoice5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "list_voice4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "listvdo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "final_output2": {
      "main": [
        [
          {
            "node": "delete_clear1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_voice3": {
      "main": [
        [
          {
            "node": "final_output2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete_clear1": {
      "main": [
        [
          {
            "node": "reformat3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reformat3": {
      "main": [
        [
          {
            "node": "readlastvdo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "readlastvdo1": {
      "main": [
        [
          {
            "node": "lastfinal_list1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lastfinal_list1": {
      "main": [
        [
          {
            "node": "callback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "output_final1": {
      "main": [
        [
          {
            "node": "reformat4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait21": {
      "main": [
        [
          {
            "node": "Execute Command3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reformat4": {
      "main": [
        [
          {
            "node": "final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2step": {
      "main": [
        []
      ]
    },
    "Execute Command3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a8c9f9fd-4173-46a5-b386-dd39205427c7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ee656dd1404caf51a470ab89c6608fc4de6971655b7fbd861ffbd97ff024aff6"
  },
  "id": "lncEchsR3s1DdWIn",
  "tags": []
}